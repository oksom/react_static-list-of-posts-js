{"version":3,"sources":["components/UserInfo/UserInfo.jsx","components/CommentInfo/CommentInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["UserInfo","user","name","email","className","href","CommentInfo","comment","body","PostInfo","post","comments","title","length","map","id","PostList","posts","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"u38IAGaA,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEvBC,EAEED,EAFFC,KACAC,EACEF,EADFE,MAGF,OACE,mBACEC,UAAU,WACVC,KAAI,iBAAYF,GAFlB,SAIGD,KCVMI,G,MAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpBL,EAAsBK,EAAtBL,KAAMC,EAAgBI,EAAhBJ,MAAOK,EAASD,EAATC,KAErB,OACE,sBAAKJ,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCF,IACtC,OACD,mBAAGE,UAAU,qBAAqBC,KAAI,iBAAYF,GAAlD,SACGA,OAGL,qBAAKC,UAAU,oBAAf,SACGI,SCZIC,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACjBT,EAAgCS,EAAhCT,KAAMU,EAA0BD,EAA1BC,SAAUC,EAAgBF,EAAhBE,MAAOJ,EAASE,EAATF,KAE/B,OACE,sBAAKJ,UAAU,WAAf,UACE,cAAC,EAAD,CAAUH,KAAMA,IAChB,qBAAKG,UAAU,kBAAf,SAAkCQ,IAClC,qBAAKR,UAAU,iBAAf,SAAiCI,IACjC,qBAAKJ,UAAU,qBAAf,SACGO,EAASE,OAAS,EACjBF,EAASG,KAAI,SAAAP,GAAO,OAClB,cAAC,EAAD,CAA8BA,QAASA,GAArBA,EAAQQ,OAG5B,mBAAG,UAAQ,oBAAX,0CCfGC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKb,UAAU,WAAf,SACGa,EAAMH,KAAI,SAAAJ,GAAI,OACb,cAAC,EAAD,CAEEA,KAAMA,GADDA,EAAKK,UCSlB,IAAME,EAAQC,EAAgBJ,KAAI,SAAAJ,GAAI,kCACjCA,GADiC,IAEpCT,MAVmBkB,EAUDT,EAAKS,OAThBC,EAAgBC,MAAK,SAAApB,GAAI,OAAIA,EAAKc,KAAOI,MAAW,MAU3DR,UAP2BW,EAOGZ,EAAKK,GAN5BQ,EAAmBC,QAAO,SAAAjB,GAAO,OAAIA,EAAQe,SAAWA,QADjE,IAA6BA,EAJRH,KAcRM,EAAM,kBACjB,0BAASrB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAAUa,MAAOA,QCtBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e6092ff3.chunk.js","sourcesContent":["import React from 'react';\nimport './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${email}`}\n    >\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport './CommentInfo.scss';\n// import { UserInfo } from '../UserInfo';\n\nexport const CommentInfo = ({ comment }) => {\n  const { name, email, body } = comment;\n\n  return (\n    <div className=\"CommentInfo\">\n      <div className=\"CommentInfo__title\">\n        <strong className=\"CommentInfo__name\">{name}</strong>\n        {' by '}\n        <a className=\"CommentInfo__email\" href={`mailto:${email}`}>\n          {email}\n        </a>\n      </div>\n      <div className=\"CommentInfo__body\">\n        {body}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './PostInfo.scss';\nimport { UserInfo } from '../UserInfo';\nimport { CommentInfo } from '../CommentInfo';\n\nexport const PostInfo = ({ post }) => {\n  const { user, comments, title, body } = post;\n\n  return (\n    <div className=\"PostInfo\">\n      <UserInfo user={user} />\n      <div className=\"PostInfo__title\">{title}</div>\n      <div className=\"PostInfo__body\">{body}</div>\n      <div className=\"PostInfo__comments\">\n        {comments.length > 0 ? (\n          comments.map(comment => (\n            <CommentInfo key={comment.id} comment={comment} />\n          ))\n        ) : (\n          <p data-cy=\"NoCommentsMessage\">No comments available.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './PostList.scss';\nimport { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo\n        key={post.id}\n        post={post}\n      />\n    ))}\n  </div>\n);\n","\nimport React from 'react';\nimport './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nfunction getCommentsByPostId(postId) {\n  return commentsFromServer.filter(comment => comment.postId === postId);\n}\n\nconst posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getCommentsByPostId(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}